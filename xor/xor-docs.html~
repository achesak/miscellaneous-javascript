<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
<head>
<title>XOR JavaScript Extension</title>
<meta http-equiv="content-type" content="text/html; charset=UTF-8"/>
<script type="text/javascript" src="xor.js"></script>
</head>
<body>
<h1>About</h1>
<p>The XOR extension adds a logical XOR operator to JavaScript.</p>
<p>XOR is similar to OR, but with one exception: only one expression to be evaluated can be true. The OR logical operator tests to see if one or more expressions are true, so more than one or even all can be true.</p>
<p>The core JavaScript (ECMAScript) standard only defines a bitwise XOR, not a logical one. This code can be used to simulate this.</p>
<h1>Usage</h1>
<h3>Linking to file</h3>
<p>Using this extension is simple. The first step is to link to the extension file. Example:<br />
<code>&lt;script type="text/javascript" src="xor.js"&gt;&lt;/script&gt;<br /></code>
If you are using the developer (non-minified) version, then replace <code>xor.js</code> with <code>xor-dev.js</code>.</p>
<h3>Using XOR function</h3>
<p>To use the XOR function, call the function and pass it all the expressions that you would like to test as parameters. Example:<br />
<code>if(XOR(1 == 3, (4 + 5) == (12 - 2))) {<br />
alert("This will show if any of the parameters were true.");<br />
</code>
</p>
</body>
</html>